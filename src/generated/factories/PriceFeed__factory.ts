/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PriceFeed, PriceFeedInterface } from "../PriceFeed";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feed",
        type: "address",
      },
    ],
    name: "addPriceFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "getLatestPriceUSD",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a336100c2565b60016020527f827bb58b1bd8c340f6887fdcc71e4a1ff95b3aa169b7fc12659973a4b948278280546001600160a01b03199081167310b3c106c4ed7d22b0e7abe5dc43bdfa970a153c179091557304d8a950066454035b04fe5e8f851f7045f0e6b36000527f8fdedf83e2c920a97f7050f4a781b652a74632e553bdd5308a41a61779c1df0d805490911673b27bc5473c9c18e9860f520e6a554e23bb675eba179055610112565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610569806101216000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c806398d423a11161005057806398d423a114610096578063e8a97a3e146100b7578063f2fde38b146100ca57600080fd5b8063715018a61461006c5780638da5cb5b14610076575b600080fd5b6100746100dd565b005b6000546040516001600160a01b0390911681526020015b60405180910390f35b6100a96100a436600461048e565b610148565b60405190815260200161008d565b6100746100c53660046104b0565b61026e565b6100746100d836600461048e565b61030e565b6000546001600160a01b0316331461013c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b61014660006103f0565b565b6001600160a01b038181166000908152600160205260408120549091166101b15760405162461bcd60e51b815260206004820152601b60248201527f5468697320746f6b656e206973206e6f7420737570706f7274656400000000006044820152606401610133565b6001600160a01b038083166000908152600160205260408082205481517ffeaf968c00000000000000000000000000000000000000000000000000000000815291519316928291829182918291879163feaf968c9160048083019260a0929190829003018186803b15801561022557600080fd5b505afa158015610239573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025d91906104e3565b50919b9a5050505050505050505050565b6000546001600160a01b031633146102c85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610133565b6001600160a01b03918216600090815260016020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001691909216179055565b6000546001600160a01b031633146103685760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610133565b6001600160a01b0381166103e45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610133565b6103ed816103f0565b50565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461046f57600080fd5b919050565b805169ffffffffffffffffffff8116811461046f57600080fd5b6000602082840312156104a057600080fd5b6104a982610458565b9392505050565b600080604083850312156104c357600080fd5b6104cc83610458565b91506104da60208401610458565b90509250929050565b600080600080600060a086880312156104fb57600080fd5b61050486610474565b945060208601519350604086015192506060860151915061052760808701610474565b9050929550929590935056fea26469706673582212205fd9b94d629630549fb5436e8acd37a7f83d4273c0ee5a67522689083167f68064736f6c63430008070033";

export class PriceFeed__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PriceFeed> {
    return super.deploy(overrides || {}) as Promise<PriceFeed>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PriceFeed {
    return super.attach(address) as PriceFeed;
  }
  connect(signer: Signer): PriceFeed__factory {
    return super.connect(signer) as PriceFeed__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PriceFeedInterface {
    return new utils.Interface(_abi) as PriceFeedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PriceFeed {
    return new Contract(address, _abi, signerOrProvider) as PriceFeed;
  }
}
